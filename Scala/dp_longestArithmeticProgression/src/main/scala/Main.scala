//Problem Description
//Find the longest Arithmetic Progression in an integer array A of size N, and return its length.
//More formally, find longest sequence of indices, 0 < i1 < i2 < … < ik < ArraySize(0-indexed) such that sequence A[i1], A[i2], …, A[ik] is an Arithmetic Progression.
//Arithmetic Progression is a sequence in which all the differences between consecutive pairs are the same, i.e sequence B[0], B[1], B[2], …, B[m - 1] of length m is an Arithmetic Progression if and only if B[1] - B[0] == B[2] - B[1] == B[3] - B[2] == … == B[m - 1] - B[m - 2]
//Note: The common difference can be positive, negative, or 0.
//Problem Constraints
//1 <= N <= 1000
//1 <= A[i] <= 1e9
//Input Format
//The first and only argument of input contains an integer array, A.
//
//
//Output Format
//Return an integer, representing the length of the longest possible arithmetic progression.
//
//
//Example Input
//Input 1:

//
//
//Example Output
//Output 1:
//4
//Output 2:
//3
//
//
//Example Explanation
//Explanation 1:
//[3, 6, 9, 12] form an arithmetic progression.
//Explanation 1:
//[4, 7, 10] form an arithmetic progression.
object Main {
  def main(args: Array[String]): Unit = {
    def solve(A: Array[Int]): Int = {
      val n_A = A.length
      if (n_A <= 2){
        return n_A
      }
      val each = 2
      var result = each
      var longLap = Array.fill(n_A)(each)
      scala.util.Sorting.quickSort(A)
//      A.sorted
//      for (i<-0 to n_A - 1){
//        println(A(i))
//      }

      var left: Int = -99
      var right: Int = -99
      var i: Int = 0
      for (i <- n_A - 2  to 0 by -1){
//        println(i)
        left = i - 1
        right = i + 1
        while(left >= 0 && right <= n_A - 1){
//          println(left, right)
          if (A(left) + A(right) == 2 * A(i)){
//            println("here")
            longLap(i) = longLap(i).max(longLap(right) + 1)
            result = result.max(longLap(i))
            left -= 1
            right += 1
          } else if (A(left) + A(right) < 2 * A(i)){
//            println("there")
            right += 1
          } else {
//            println("!")
            left -= 1
          }
        }
        result
      }
      result
//      var longLap: Array[Int] = Array()
//      longLap.fill(n_A)(each)

    }

    var A = Array(3, 6, 9, 12)
    var A2 = Array(9, 4, 7, 2, 10)
    var A3 = Array(100, 10, 8, 300, 6, 1, 4, 2 )
    var A4 = Array(364702938, 643942025, 489766715, 204360054, 853076025, 958774974, 487442754, 873986593, 304523071, 665723496, 424996402, 383918492, 403477633, 568954025, 739359908, 7841987, 803773042, 267635441, 244349842, 799061430, 536467496, 199104939, 577187747, 610830330, 179781827, 83666657, 657448834, 939189223, 948465511, 88731696, 959963654, 64492867, 526115758, 163619780, 104832477, 982841996, 181205645, 391455666, 379217474, 850363046, 548034934, 265765352, 3008858, 104010702, 56171453, 254539311, 254775153, 997346177, 213581777, 150010079, 73587772, 912836752, 424116696, 631085279, 228551620, 492574681, 153195979, 352870327, 415486295, 535081845, 532788699, 646597927, 30355042, 149824732, 179686213, 624174209, 38315068, 789995600, 638393219, 646531321, 922600653, 243493404, 363551670, 621933572, 788319202, 380459444, 249316366, 519559662, 570722129, 391104374, 917512175, 620789538, 60466217, 495935685, 807015385, 852840, 375029771, 260857252, 139969014, 964616430, 954279404, 92317005, 14968078, 312891844, 659504025, 47304185, 472479502, 642196928, 150959074, 990969611, 416827769, 532648666, 440538539, 681351941, 25516356, 430407716, 63809489, 851741770, 97937488, 102688129, 376265335, 625886754, 903763069, 394057049, 77246792, 132960129, 204153400, 601059314, 240814910, 443259599, 243300547, 343421138, 516756650, 705148082, 535308205, 42253925, 418372142, 719121913, 244018072, 591703754, 841966045, 79818005, 397672484, 712320721, 826759242, 49642381, 42092204, 921552765, 885259191, 784516721, 896679091, 518981211, 512380987, 177815636, 323891048, 839540415, 114443888, 386819728, 846160624, 784888731, 706591816, 104083602, 207668333, 620737953, 267210542, 619265114, 209267409, 652871101, 236891757, 5078361, 526409271, 801725477, 213948838, 950486785, 774278882, 628010778, 95012438, 219945518, 804964539, 965772697, 744471141, 12989138, 338852196, 651816584, 767235538, 362120351, 188083659, 26128429, 554728873, 27906657, 875749153, 936839757, 115687692, 890330506, 118753643, 880161435, 650786955, 642130111, 101699175, 934793037, 76203004, 843626213, 64974170, 25440691, 232439481, 337594871, 305193120, 116068577, 849422163, 840750109, 44676300, 329031070, 254802465, 382637137, 342580618, 348780716, 400870922, 781385415, 882168500, 378880612, 557432529, 371104866, 866963571, 380184499, 997016465, 40821311, 842405023, 958020556, 692841310, 927554733, 828595555, 847775510, 8998725, 917715785, 821645741, 6376954, 877016948, 769833852, 8568986, 137534950, 857492075, 106541105, 708723557, 498774414, 199151630, 288181561, 891863339, 111274110, 799443653, 518038516, 774625071, 3949956, 888659259, 592783236, 731200616, 313574751, 325970319, 352367936, 561743750, 889085635, 671043216, 712950688, 677204780, 117399957, 677339126, 227877935, 981110944, 78452319, 966782539, 852851368, 493331671, 696455124, 461642691, 584195365, 276265471, 334126283, 486013363, 472540577, 594942630, 516913575, 121352683, 538820355, 15158683, 295164608, 144342086, 374660116, 490508205, 855414022, 614192913, 860131082, 436925394, 84757638, 739963905, 495551558, 793452240, 752091634, 315337993, 969740975, 109427919, 909024398, 774384025, 247657128, 550042410, 719426359, 921233046, 880451076, 505156275, 84915511, 172101542, 923885709, 366593126, 200085439, 950323895, 184070299, 219321790, 177019445, 900952617, 403430519, 850850851, 156638981, 890135865, 68656230, 706530768, 151783286, 884856990, 467167052, 476421129, 317128860, 645885401, 939832442, 313254675, 315153701, 19837382, 546905586, 612166339, 85498393, 304922905, 943274190, 885020773, 806178951, 975300534, 133397387, 36955841, 494045704, 180626003, 313088983, 751602131, 678204063, 806230389, 766068773, 79662223, 99254055, 641850490, 770818146, 445470891, 901271595, 395793051, 263203171, 913124001, 956934942, 700529408, 218657175, 626620208, 346030968, 356763100, 343079276, 139799537, 263708541, 816943003, 424345923, 188736174, 255529799, 795779617, 139861000, 222966955, 46648670, 192665535, 798048893, 698618909, 321163591, 96318799, 701126779, 594995161, 326060268, 790398956, 975146570, 766949910, 930279673, 455763724, 366902932, 38285764, 297474868, 318176260, 354120790, 970900255, 266094056, 108095911, 86458880, 341708965, 731294274, 813942934, 468051945, 316432251, 33582358, 704233569, 197465339, 937717958, 916976597, 209264680, 607004798, 308566509, 978051082, 190950809, 969678245, 128866632, 124226025, 512688888, 574088074, 54225344, 832281877, 526763601, 314507250, 966087080, 975432013, 195681293, 992598809, 955212967, 750333221, 826461760, 418563121, 707680495, 147900556, 52314886, 935477379, 840529166, 626262996, 784819825, 622238901, 797590041, 502886110, 584949598, 67757620, 635986430, 997817891, 625494614, 755525433, 45147720, 736002649, 490715023, 36445258, 502603408, 128544378, 76812164, 344368501, 332967642, 918516836, 326257789, 888908932, 922429769, 592671487, 922843327, 27148028, 119332972, 953267526, 265561039, 813355604, 260473046, 125069713, 733909398, 742925642, 881333033, 295822045, 456467510, 267616445, 998825894, 387123456, 582208002, 160652059, 692202931, 935737115, 910936421, 697499881, 841004414, 23821544, 936731666, 446494305, 921921517, 640423114, 403238234, 840350730, 848506211, 478730374, 473903929, 960229804, 242700220, 991143484, 117877406, 111889881, 411297019, 992872060, 179033407, 389873599, 632962993, 648769533, 21323489, 827843994, 27458245, 855481434, 673436170, 129139273, 411536018, 714760959, 210342443, 467348136, 298674446, 78389060, 3705582, 2690911, 128984590, 371843578, 397594273, 471570267, 393078216, 805869737, 73299727, 366631731, 848919674, 985352074, 492155474, 623785098, 3906914, 165243961, 558896956, 287667514, 842218401, 26206407, 216926411, 528690491, 487492775, 640947717, 630297864, 953103017, 721883746, 491255296, 526870577, 722185343, 191486957, 317041270, 605688280, 730426777, 192564560, 174703891, 638150588, 863599398, 746853937, 332194041, 801498307, 690869942, 7027462, 519629318, 667697101, 309370705, 535529548, 541148659, 492266768, 346819709, 728222802, 731320558, 181956298, 122787158, 377324645, 176098924, 462150102, 982154939, 444998704, 481417451, 538450481, 241145709, 634289274, 391004410, 311159050, 527472905, 424619519, 492096852, 712266967, 997065991, 873213196, 190941574, 814465600, 662573222, 91690636, 224994126, 831315139, 384925388, 146501125, 154406590, 951304151, 553105539, 661819530, 309291074, 270904751, 430818417, 524018659, 351157063, 611687482, 627283382, 754569748, 89068874, 184463359, 383030269, 507490797, 666521119, 945735878, 382679872, 922966944, 595387022, 469617154, 853104553, 453653076, 980293079, 291230566, 596882846, 913869182, 596290127, 615717360, 711716451, 334469764, 394869122, 840864224, 888873685, 330025036, 854261675, 574041303, 341895374, 643044866, 443609335, 752604381, 343150637, 265422041, 624699865, 283072469, 922699975, 839056435, 570126616, 46002198, 64828866, 804541833, 303803896, 389700926, 952081756, 737410892, 536726604, 258965801, 562606762, 361342790, 4509411, 627734629, 822485312, 158403045, 473996859, 374612263, 759993061, 391541083, 741079170, 986191010, 633517524, 305104042, 766426682, 726321265, 984442904, 244120813, 170996498, 605013797, 131809231, 188355133, 293824653, 172296695, 982588306, 212405109, 774837246, 348749711, 953511711, 74602636, 789795228, 491966486, 668680849, 737095989, 612861000, 814345140, 785485649, 1582811, 832492310, 842285562, 81231107, 525349277, 166283899, 857257343, 456367675, 433660061, 493857994, 247009503, 402827270, 375729723, 213782054, 294840147, 59835177, 627464640, 579747483, 682640342, 204843897, 395082335, 129359418, 890279159, 329506437, 728102870, 863107081, 643548733, 322159012, 720240597, 792137464, 129479468, 760484265, 710116735, 291588539, 170892519, 986712927, 815433552, 824806730, 519769725, 880033903, 55509912, 947179783, 137385868, 499362951, 427024981, 118507393, 759850457, 795123914, 930620737, 819325658, 741189442, 692057271, 635113142, 279101777, 759280991, 887785263, 290535885, 732547741, 406126333, 688375227, 443157037, 667033063, 960052501, 484002573, 734981560, 509141376, 490514961, 968962114, 977754797, 580006335, 738198612, 891043165, 285261801, 137839076, 600237043, 379541515, 927811015, 840968238, 489553336, 913058092, 922944202, 648820733, 881841889, 258230249, 11344356, 612288533, 580840980, 807425018, 443112133, 986073359, 803632411, 51525467, 552614128, 992617845, 201400792, 508883472, 450889727, 707584846, 687811460, 142728016, 90522810, 998437191, 296643076, 296883418, 41352522, 300869046, 455809261, 712072375, 947775314, 299750776, 988389790, 7449162, 644005805, 487975352, 161684768, 869073918, 415306352, 732005314, 953240559, 886060090, 286574105, 718904338, 882202341, 947637896, 137641693, 504046432, 759137033, 615758401, 327742311, 69458019, 223554785, 262631069, 961473695, 747681610, 284258850, 461110795, 694391366, 135800337, 694889022, 983711965, 844130922, 822768820, 628354707, 506726427, 704648007, 720482268, 558926263, 780230263, 794881659, 80274826, 559270266, 119437743, 566678480, 75230512, 605080521, 179506079, 817879138, 51847919, 603355775, 182720888, 88341003, 836028941, 152900663, 337251002, 968246181, 756228925, 57569302, 125875741, 322178289, 981487844, 50242752, 468851190, 864441084, 934418430, 222634096, 894729995, 991873943, 583541760, 28544471, 858070816, 169773084, 444189345, 837164443, 983680181, 309937234, 393506040, 480114940, 121992978, 562831781, 922020056, 149076037, 481271230, 228406185, 195723879, 660028973, 280162229, 328686756, 910359605, 666629780, 624526061, 583182515, 433156294, 88261525, 573984018, 452848202, 337686046, 763837925, 166755306, 190260204, 100089842, 730270490, 787074422, 934278454, 17549514, 749422159, 546636658, 387269140, 883243747, 196937538, 656901139, 324013946, 757603454, 610699912, 135321744, 167369235, 844896899, 510480984, 456719920, 985132659, 25673040, 916303653, 710263334, 608002689, 973993194, 709503897, 729046912, 623493622, 410849418, 986234818, 296048353, 79558459, 330441752, 341814722, 361276929, 317431825, 727303627, 315140265, 867760353, 886806094, 250484142, 819026474, 7771248, 688604493, 586331765, 749251692, 902823260, 704814538, 298143314, 815329947, 157267722, 719976021, 640367522, 542645314, 950477009, 609982054, 955184220, 267182392, 146148064, 662952900, 30487841, 234285474, 224694744, 94560755, 144710505, 124227308, 534252269, 548748573, 448735966, 918966342, 364920770, 10085558, 930507017, 648769187, 15508267, 801913779, 157506678, 441133815, 644796333, 889485969, 957014216, 959154106, 417054933, 55635123, 904125816, 48303340, 85416814, 7574879, 609447777, 565525269, 20574461, 50098860, 197950396, 500136369, 540959425, 533036401, 514749743, 261058662, 303833010, 879019924, 74113132, 78885861, 837247225, 227505204, 85330145, 698404239, 704098132, 68659327, 758590450, 19280911, 857982304)
    println(solve(A))
    println(solve(A2))
    println(solve(A3))
    println(solve(A4)) // Expect 2 only, need to figure it out
    //Input 2:
    // A = [9, 4, 7, 2, 10]
  }
}

//def Solve(self, A):

//
//        for j in range(n-2, -1, -1):
//            i= j-1
//            k= j+1
//            while(i>=0 and k<n):
//                if A[i]+A[k] == 2*A[j]:
//                    llap[j] = max(llap[k]+1,llap[j])
//                    ans = max(ans, llap[j])
//                    i-=1
//                    k+=1
//                elif A[i]+A[k] < 2*A[j]:
//                    k += 1
//                else:
//                    i -= 1
//
//        return ans